
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)


-- Executing script file `syn_ice40.ys' --

1. Executing Verilog-2005 frontend: ../../source/Multiplier.v
Parsing Verilog input from `../../source/Multiplier.v' to AST representation.
Generating RTLIL representation for module `\Multiplier'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../source/BiQuad.v
Parsing Verilog input from `../../source/BiQuad.v' to AST representation.
Generating RTLIL representation for module `\BiQuad'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../source/IIR_Filter.v
Parsing Verilog input from `../../source/IIR_Filter.v' to AST representation.
Generating RTLIL representation for module `\IIR_Filter'.
Warning: Replacing memory \r_y with list of registers. See ../../source/IIR_Filter.v:161
Successfully finished Verilog frontend.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \IIR_Filter
Used module:     \BiQuad
Used module:         \Multiplier
Parameter 1 (\P_MUL_FACTORS_MSB) = 0
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Multiplier'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 0
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Generating RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=0\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 0
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=0\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 0
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=0\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 0
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=0\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_DATA_MSB) = 15
Parameter 2 (\P_IS_ANLOGIC) = 0

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\BiQuad'.
Parameter 1 (\P_DATA_MSB) = 15
Parameter 2 (\P_IS_ANLOGIC) = 0
Generating RTLIL representation for module `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0'.
Parameter 1 (\P_DATA_MSB) = 15
Parameter 2 (\P_IS_ANLOGIC) = 0
Found cached RTLIL representation for module `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0'.
Parameter 1 (\P_DATA_MSB) = 15
Parameter 2 (\P_IS_ANLOGIC) = 0
Found cached RTLIL representation for module `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Multiplier'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Generating RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0'.

4.2.5. Analyzing design hierarchy..
Top module:  \IIR_Filter
Used module:     $paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0
Used module:         \Multiplier
Used module:     $paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0'.
Parameter 1 (\P_MUL_FACTORS_MSB) = 15
Parameter 2 (\P_MUL_ANLOGIC_MUL) = 0
Found cached RTLIL representation for module `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0'.

4.2.6. Analyzing design hierarchy..
Top module:  \IIR_Filter
Used module:     $paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0
Used module:         $paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0

4.2.7. Analyzing design hierarchy..
Top module:  \IIR_Filter
Used module:     $paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0
Used module:         $paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0
Removing unused module `$paramod\Multiplier\P_MUL_FACTORS_MSB=0\P_MUL_ANLOGIC_MUL=0'.
Removing unused module `\BiQuad'.
Removing unused module `\Multiplier'.
Removed 3 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$293 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$282 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$279 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$276 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$273 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$270 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$255 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$244 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$241 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$238 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$235 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$232 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$../../source/IIR_Filter.v:204$36 in module IIR_Filter.
Marked 2 switch rules as full_case in process $proc$../../source/IIR_Filter.v:184$31 in module IIR_Filter.
Marked 1 switch rules as full_case in process $proc$../../source/IIR_Filter.v:157$28 in module IIR_Filter.
Marked 2 switch rules as full_case in process $proc$../../source/IIR_Filter.v:76$22 in module IIR_Filter.
Marked 1 switch rules as full_case in process $proc$../../source/BiQuad.v:68$446 in module $paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.
Marked 1 switch rules as full_case in process $proc$../../source/Multiplier.v:75$448 in module $paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.
Removed a total of 0 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 24 redundant assignments.
Promoted 26 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$303'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$299'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$292'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$288'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$281'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$278'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$275'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$272'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$269'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$267'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$265'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$261'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$254'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$250'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$243'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$237'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$231'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$279'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$273'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$241'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$235'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$303'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$299'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$293'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$292'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$288'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$282'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$281'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$279'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$278'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$276'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$275'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$273'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$272'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$270'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$269'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$268'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$267'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$266'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$265'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$261'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$255'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$254'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$250'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$244'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$243'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$238'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$237'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$235'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$232'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$231'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$228'.
Creating decoders for process `\IIR_Filter.$proc$../../source/IIR_Filter.v:0$56'.
Creating decoders for process `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
     1/4: $0\r_slave_write_ack[0:0]
     2/4: $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39
     3/4: $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_DATA[15:0]$38
     4/4: $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_ADDR[12:0]$37
Creating decoders for process `\IIR_Filter.$proc$../../source/IIR_Filter.v:184$31'.
     1/1: $0\r_slave_read_ack[0:0]
Creating decoders for process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
     1/7: $0\r_accumulator[31:0]
     2/7: $0\r_multiplier1[15:0]
     3/7: $0\r_multiplier0[15:0]
     4/7: $1\ii[31:0]
     5/7: $0\r_y[2][31:0]
     6/7: $0\r_y[1][31:0]
     7/7: $0\r_y[0][31:0]
Creating decoders for process `\IIR_Filter.$proc$../../source/IIR_Filter.v:76$22'.
     1/2: $0\r_master_read_ack[0:0]
     2/2: $0\r_master_read_stb[0:0]
Creating decoders for process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
     1/5: $0\r_z4[15:0]
     2/5: $0\r_z3[15:0]
     3/5: $0\r_z2[15:0]
     4/5: $0\r_z1[15:0]
     5/5: $0\r_z0[15:0]
Creating decoders for process `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.$proc$../../source/Multiplier.v:75$448'.
     1/1: $0\r_product[31:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\IIR_Filter.\w_accumulator[0]' from process `\IIR_Filter.$proc$../../source/IIR_Filter.v:0$56'.
No latch inferred for signal `\IIR_Filter.\w_accumulator[1]' from process `\IIR_Filter.$proc$../../source/IIR_Filter.v:0$56'.
No latch inferred for signal `\IIR_Filter.\w_accumulator[2]' from process `\IIR_Filter.$proc$../../source/IIR_Filter.v:0$56'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300'.
  created $adff cell `$procdff$572' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$293'.
  created $dff cell `$procdff$573' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289'.
  created $adff cell `$procdff$574' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$282'.
  created $dff cell `$procdff$575' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$279'.
  created $adff cell `$procdff$576' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$276'.
  created $dff cell `$procdff$577' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$273'.
  created $adff cell `$procdff$578' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$270'.
  created $dff cell `$procdff$579' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$268'.
  created $dff cell `$procdff$580' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$266'.
  created $dff cell `$procdff$581' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262'.
  created $adff cell `$procdff$582' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$255'.
  created $dff cell `$procdff$583' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251'.
  created $adff cell `$procdff$584' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$244'.
  created $dff cell `$procdff$585' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$241'.
  created $adff cell `$procdff$586' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$238'.
  created $dff cell `$procdff$587' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$235'.
  created $adff cell `$procdff$588' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$232'.
  created $dff cell `$procdff$589' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$230'.
  created $dff cell `$procdff$590' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$228'.
  created $dff cell `$procdff$591' with positive edge clock.
Creating register for signal `\IIR_Filter.\r_slave_write_ack' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
  created $dff cell `$procdff$592' with positive edge clock.
Creating register for signal `\IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_ADDR' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
  created $dff cell `$procdff$593' with positive edge clock.
Creating register for signal `\IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_DATA' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
  created $dff cell `$procdff$594' with positive edge clock.
Creating register for signal `\IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
  created $dff cell `$procdff$595' with positive edge clock.
Creating register for signal `\IIR_Filter.\r_slave_read_ack' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:184$31'.
  created $dff cell `$procdff$596' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_multiplier0' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$597' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_multiplier1' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$598' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_accumulator' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$599' with negative edge clock.
Creating register for signal `\IIR_Filter.\ii' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$600' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_y[0]' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$601' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_y[1]' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$602' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_y[2]' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
  created $dff cell `$procdff$603' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_master_read_stb' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:76$22'.
  created $dff cell `$procdff$604' with negative edge clock.
Creating register for signal `\IIR_Filter.\r_master_read_ack' using process `\IIR_Filter.$proc$../../source/IIR_Filter.v:76$22'.
  created $dff cell `$procdff$605' with negative edge clock.
Creating register for signal `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.\r_z0' using process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
  created $dff cell `$procdff$606' with negative edge clock.
Creating register for signal `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.\r_z1' using process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
  created $dff cell `$procdff$607' with negative edge clock.
Creating register for signal `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.\r_z2' using process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
  created $dff cell `$procdff$608' with negative edge clock.
Creating register for signal `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.\r_z3' using process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
  created $dff cell `$procdff$609' with negative edge clock.
Creating register for signal `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.\r_z4' using process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
  created $dff cell `$procdff$610' with negative edge clock.
Creating register for signal `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.\r_product' using process `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.$proc$../../source/Multiplier.v:75$448'.
  created $dff cell `$procdff$611' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$303'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$300'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$299'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$293'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$293'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$292'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$289'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$288'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$282'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$282'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$281'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$279'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$278'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$276'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$276'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$275'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$273'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$272'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$270'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$270'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$269'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$268'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$268'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$267'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$266'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$265'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$262'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$261'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$255'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$255'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$254'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$251'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$250'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$244'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$244'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$243'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$241'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$238'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$238'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$237'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$235'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$232'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$232'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$231'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$230'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$230'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$228'.
Removing empty process `IIR_Filter.$proc$../../source/IIR_Filter.v:0$56'.
Found and cleaned up 2 empty switches in `\IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
Removing empty process `IIR_Filter.$proc$../../source/IIR_Filter.v:204$36'.
Found and cleaned up 2 empty switches in `\IIR_Filter.$proc$../../source/IIR_Filter.v:184$31'.
Removing empty process `IIR_Filter.$proc$../../source/IIR_Filter.v:184$31'.
Found and cleaned up 1 empty switch in `\IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
Removing empty process `IIR_Filter.$proc$../../source/IIR_Filter.v:157$28'.
Found and cleaned up 2 empty switches in `\IIR_Filter.$proc$../../source/IIR_Filter.v:76$22'.
Removing empty process `IIR_Filter.$proc$../../source/IIR_Filter.v:76$22'.
Found and cleaned up 1 empty switch in `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
Removing empty process `$paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.$proc$../../source/BiQuad.v:68$446'.
Found and cleaned up 1 empty switch in `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.$proc$../../source/Multiplier.v:75$448'.
Removing empty process `$paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.$proc$../../source/Multiplier.v:75$448'.
Cleaned up 27 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\BiQuad\P_DATA_MSB=15\P_IS_ANLOGIC=0.
Deleting now unused module $paramod\Multiplier\P_MUL_FACTORS_MSB=15\P_MUL_ANLOGIC_MUL=0.
<suppressed ~8 debug messages>

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.
<suppressed ~26 debug messages>

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 3 unused cells and 230 unused wires.
<suppressed ~6 debug messages>

4.9. Executing CHECK pass (checking for obvious problems).
Checking module IIR_Filter...
Found and reported 0 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
    Consolidated identical input bits for $mux cell $procmux$502:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$procmux$502_Y
      New ports: A=1'0, B=1'1, Y=$procmux$502_Y [0]
      New connections: $procmux$502_Y [15:1] = { $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] $procmux$502_Y [0] }
  Optimizing cells in module \IIR_Filter.
    Consolidated identical input bits for $mux cell $procmux$505:
      Old ports: A=$procmux$502_Y, B=16'0000000000000000, Y=$0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39
      New ports: A=$procmux$502_Y [0], B=1'0, Y=$0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0]
      New connections: $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [15:1] = { $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] $0$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN[15:0]$39 [0] }
  Optimizing cells in module \IIR_Filter.
Performed a total of 2 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.10.6. Executing OPT_DFF pass (perform DFF optimizations).

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.10.13. Executing OPT_DFF pass (perform DFF optimizations).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing FSM pass (extract and optimize FSM).

4.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_EN as FSM state register:
    Users of register don't seem to benefit from recoding.

4.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

4.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$604 ($dff) from module IIR_Filter (D = $procmux$549_Y, Q = \r_master_read_stb, rval = 1'0).
Adding SRST signal on $procdff$603 ($dff) from module IIR_Filter (D = \w_y[2], Q = \r_y[2], rval = 0).
Adding SRST signal on $procdff$602 ($dff) from module IIR_Filter (D = \w_y[1], Q = \r_y[1], rval = 0).
Adding SRST signal on $procdff$601 ($dff) from module IIR_Filter (D = \w_y[0], Q = \r_y[0], rval = 0).
Adding SRST signal on $procdff$599 ($dff) from module IIR_Filter (D = $add$../../source/IIR_Filter.v:176$30_Y, Q = \r_accumulator, rval = 0).
Adding SRST signal on $procdff$598 ($dff) from module IIR_Filter (D = \r_multiplier0, Q = \r_multiplier1, rval = 16'0000000000000000).
Adding SRST signal on $procdff$597 ($dff) from module IIR_Filter (D = \multiplier.r_product [15:0], Q = \r_multiplier0, rval = 16'0000000000000000).
Adding SRST signal on $procdff$596 ($dff) from module IIR_Filter (D = $procmux$520_Y, Q = \r_slave_read_ack, rval = 1'0).
Adding SRST signal on $flatten\multiplier.$procdff$611 ($dff) from module IIR_Filter (D = $flatten\multiplier.$mul$../../source/Multiplier.v:81$450_Y, Q = \multiplier.r_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_d.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_c.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_b.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_a.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$procdff$610 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_c.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_d.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$procdff$609 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_a.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_c.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$procdff$608 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_a.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$procdff$607 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.multiplier_b.o_product [15:0], Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.r_z1, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$procdff$606 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$9[0].\biquad.r_z0, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_d.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_d.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_c.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_b.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_a.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$procdff$610 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_c.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_d.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$procdff$609 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_a.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_c.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$procdff$608 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_a.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$procdff$607 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.multiplier_b.o_product [15:0], Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.r_z1, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$procdff$606 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$11[2].\biquad.r_z0, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_d.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_d.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_c.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_b.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$procdff$611 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_a.o_product, rval = 0).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$procdff$610 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_c.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_d.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$procdff$609 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_a.i_multiplicand, Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_c.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$procdff$608 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_a.i_multiplicand, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$procdff$607 ($dff) from module IIR_Filter (D = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.multiplier_b.o_product [15:0], Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.r_z1, rval = 16'0000000000000000).
Adding SRST signal on $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$procdff$606 ($dff) from module IIR_Filter (D = $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444_Y [15:0], Q = $genblock$../../source/IIR_Filter.v:98$10[1].\biquad.r_z0, rval = 16'0000000000000000).

4.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 36 unused cells and 36 unused wires.
<suppressed ~37 debug messages>

4.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.12.9. Rerunning OPT passes. (Maybe there is more to do..)

4.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.12.13. Executing OPT_DFF pass (perform DFF optimizations).

4.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.12.16. Finished OPT passes. (There is nothing left to do.)

4.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:115$44 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:115$48 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:115$52 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:116$53 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:117$54 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:118$55 (r_coefficients).
Removed top 28 address bits (of 32) from memory read port IIR_Filter.$memrd$\r_coefficients$../../source/IIR_Filter.v:136$27 (r_coefficients).
Removed top 9 address bits (of 13) from memory write port IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:0$59 (r_coefficients).
Removed cell IIR_Filter.$procmux$508 ($mux).
Removed cell IIR_Filter.$procmux$511 ($mux).
Removed cell IIR_Filter.$procmux$514 ($mux).
Removed cell IIR_Filter.$procmux$517 ($mux).
Removed top 9 bits (of 13) from FF cell IIR_Filter.$procdff$593 ($dff).
Removed top 15 bits (of 16) from FF cell IIR_Filter.$procdff$595 ($dff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$620 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$616 ($sdff).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten\multiplier.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten\multiplier.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten\multiplier.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$623 ($sdff).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$641 ($sdff).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$632 ($sdff).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$add$../../source/IIR_Filter.v:176$30 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$add$../../source/IIR_Filter.v:176$30 ($add).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$624 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$642 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$633 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$58 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$58 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$58 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$57 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$57 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$add$../../source/IIR_Filter.v:148$57 ($add).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$613 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$615 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$614 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$630 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port A of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from port B of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$631 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$621 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$622 ($sdff).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$640 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from FF cell IIR_Filter.$auto$opt_dff.cc:702:run$639 ($sdff).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from port Y of cell IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450 ($mul).
Removed top 16 bits (of 32) from wire IIR_Filter.$add$../../source/IIR_Filter.v:176$30_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_a.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 29 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_b.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_c.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.\multiplier_d.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 16 bits (of 32) from wire IIR_Filter.$flatten\multiplier.$mul$../../source/Multiplier.v:81$450_Y.
Removed top 9 bits (of 13) from wire IIR_Filter.$memwr$\r_coefficients$../../source/IIR_Filter.v:210$21_ADDR.
Removed top 16 bits (of 32) from wire IIR_Filter.r_y[0].
Removed top 16 bits (of 32) from wire IIR_Filter.w_accumulator[0].
Removed top 16 bits (of 32) from wire IIR_Filter.w_accumulator[1].
Removed top 16 bits (of 32) from wire IIR_Filter.w_product.
Removed top 16 bits (of 32) from wire IIR_Filter.w_y[0].
Removed top 16 bits (of 32) from wire IIR_Filter.w_y[1].
Removed top 16 bits (of 32) from wire IIR_Filter.w_y[2].

4.14. Executing PEEPOPT pass (run peephole optimizers).

4.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.16. Executing SHARE pass (SAT-based resource sharing).

4.17. Executing TECHMAP pass (map to technology primitives).

4.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.20. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\r_coefficients$../../source/IIR_Filter.v:0$59' in module `\IIR_Filter': merged $dff to cell.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$44' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$48' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$52' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:116$53' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:117$54' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:118$55' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:136$27' in module `\IIR_Filter': no (compatible) $dff found.

4.21. Executing WREDUCE pass (reducing word size of cells).

4.22. Executing TECHMAP pass (map to technology primitives).

4.22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.22.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL16X16'.
Successfully finished Verilog frontend.

4.22.3. Continuing TECHMAP pass.
Using template $paramod$69ad2a442bb0dc866cc301378fa829618b58cf3d\_80_mul for cells of type $mul.
Using template $paramod\$__MUL16X16\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $__MUL16X16.
No more expansions possible.
<suppressed ~116 debug messages>

4.23. Executing OPT_EXPR pass (perform const folding).

4.24. Executing WREDUCE pass (reducing word size of cells).

4.25. Executing ICE40_DSP pass (map multipliers).

4.26. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module IIR_Filter:
  creating $macc model for $add$../../source/IIR_Filter.v:148$58 ($add).
  creating $macc model for $add$../../source/IIR_Filter.v:176$30 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444 ($add).
  creating $macc model for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445 ($add).
  creating $macc model for $add$../../source/IIR_Filter.v:148$57 ($add).
  merging $macc model for $add$../../source/IIR_Filter.v:148$58 into $add$../../source/IIR_Filter.v:176$30.
  merging $macc model for $add$../../source/IIR_Filter.v:148$57 into $add$../../source/IIR_Filter.v:176$30.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443.
  creating $alu model for $macc $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445.
  creating $macc cell for $add$../../source/IIR_Filter.v:176$30: $auto$alumacc.cc:365:replace_macc$698
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:54$445: $auto$alumacc.cc:485:replace_alu$699
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:52$443: $auto$alumacc.cc:485:replace_alu$702
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:53$444: $auto$alumacc.cc:485:replace_alu$705
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$10[1].\biquad.$add$../../source/BiQuad.v:54$445: $auto$alumacc.cc:485:replace_alu$708
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:52$443: $auto$alumacc.cc:485:replace_alu$711
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:53$444: $auto$alumacc.cc:485:replace_alu$714
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$11[2].\biquad.$add$../../source/BiQuad.v:54$445: $auto$alumacc.cc:485:replace_alu$717
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:52$443: $auto$alumacc.cc:485:replace_alu$720
  creating $alu cell for $flatten$genblock$../../source/IIR_Filter.v:98$9[0].\biquad.$add$../../source/BiQuad.v:53$444: $auto$alumacc.cc:485:replace_alu$723
  created 9 $alu and 1 $macc cells.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.27.6. Executing OPT_DFF pass (perform DFF optimizations).

4.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 4 unused cells and 109 unused wires.
<suppressed ~7 debug messages>

4.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.27.9. Rerunning OPT passes. (Maybe there is more to do..)

4.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.27.13. Executing OPT_DFF pass (perform DFF optimizations).

4.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.27.16. Finished OPT passes. (There is nothing left to do.)

4.28. Executing MEMORY pass.

4.28.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.28.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$44' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$48' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:115$52' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:116$53' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:117$54' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:118$55' in module `\IIR_Filter': no (compatible) $dff found.
Checking cell `$memrd$\r_coefficients$../../source/IIR_Filter.v:136$27' in module `\IIR_Filter': no (compatible) $dff found.

4.28.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.28.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.28.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.28.6. Executing MEMORY_COLLECT pass (generating $mem cells).

4.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.30. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing IIR_Filter.r_coefficients:
  Properties: ports=8 bits=208 rports=7 wports=1 dbits=16 abits=4 words=13
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=243 dwaste=0 bwaste=3888 waste=3888 efficiency=5
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=499 dwaste=0 bwaste=3992 waste=3992 efficiency=2
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1011 dwaste=0 bwaste=4044 waste=4044 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2035 dwaste=0 bwaste=4070 waste=4070 efficiency=0
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1011 dwaste=0 bwaste=4044 waste=4044 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2035 dwaste=0 bwaste=4070 waste=4070 efficiency=0
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1011 dwaste=0 bwaste=4044 waste=4044 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2035 dwaste=0 bwaste=4070 waste=4070 efficiency=0
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  No acceptable bram resources found.

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

4.32. Executing ICE40_BRAMINIT pass.

4.33. Executing OPT pass (performing simple optimizations).

4.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.
<suppressed ~24 debug messages>

4.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.33.3. Executing OPT_DFF pass (perform DFF optimizations).

4.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.33.5. Finished fast OPT passes.

4.34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \r_coefficients in module \IIR_Filter:
  created 13 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 105 $mux cells.
  write interface: 13 write mux blocks.

4.35. Executing OPT pass (performing simple optimizations).

4.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.
<suppressed ~136 debug messages>

4.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

4.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.35.6. Executing OPT_DFF pass (perform DFF optimizations).

4.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 25 unused cells and 258 unused wires.
<suppressed ~32 debug messages>

4.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.35.9. Rerunning OPT passes. (Maybe there is more to do..)

4.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.35.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\r_coefficients[5]$739 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[5]).
Adding EN signal on $memory\r_coefficients[4]$737 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[4]).
Adding EN signal on $memory\r_coefficients[3]$735 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[3]).
Adding EN signal on $memory\r_coefficients[2]$733 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[2]).
Adding EN signal on $memory\r_coefficients[1]$731 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[1]).
Adding EN signal on $memory\r_coefficients[12]$753 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[12]).
Adding EN signal on $memory\r_coefficients[0]$729 ($dff) from module IIR_Filter (D = \i_slave_write_data, Q = \r_coefficients[0]).

4.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

4.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.35.16. Rerunning OPT passes. (Maybe there is more to do..)

4.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IIR_Filter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IIR_Filter.
Performed a total of 0 changes.

4.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.35.20. Executing OPT_DFF pass (perform DFF optimizations).

4.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.35.23. Finished OPT passes. (There is nothing left to do.)

4.36. Executing ICE40_WRAPCARRY pass (wrap carries).

4.37. Executing TECHMAP pass (map to technology primitives).

4.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.37.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.37.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper maccmap for cells of type $macc.
  add \r_y[2] [15:0] (16 bits, unsigned)
  add \r_multiplier1 (16 bits, unsigned)
  add \r_y[1] [15:0] (16 bits, unsigned)
  add \r_y[0] (16 bits, unsigned)
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~246 debug messages>

4.38. Executing OPT pass (performing simple optimizations).

4.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.
<suppressed ~165 debug messages>

4.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

4.38.3. Executing OPT_DFF pass (perform DFF optimizations).

4.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 292 unused cells and 181 unused wires.
<suppressed ~293 debug messages>

4.38.5. Finished fast OPT passes.

4.39. Executing ICE40_OPT pass (performing simple optimizations).

4.39.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) IIR_Filter.$auto$maccmap.cc:240:synth$1785.slice[0].carry: CO=1'0

4.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.39.4. Executing OPT_DFF pass (perform DFF optimizations).

4.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.39.6. Rerunning OPT passes. (Removed registers in this run.)

4.39.7. Running ICE40 specific optimizations.

4.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.39.10. Executing OPT_DFF pass (perform DFF optimizations).

4.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.39.12. Finished OPT passes. (There is nothing left to do.)

4.40. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_NP0_ for cells of type $_SDFF_NP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~681 debug messages>

4.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.43. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping IIR_Filter.$auto$maccmap.cc:240:synth$1785.slice[0].carry ($lut).

4.44. Executing ICE40_OPT pass (performing simple optimizations).

4.44.1. Running ICE40 specific optimizations.

4.44.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.
<suppressed ~13 debug messages>

4.44.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.44.4. Executing OPT_DFF pass (perform DFF optimizations).

4.44.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..
Removed 1 unused cells and 3298 unused wires.
<suppressed ~2 debug messages>

4.44.6. Rerunning OPT passes. (Removed registers in this run.)

4.44.7. Running ICE40 specific optimizations.

4.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IIR_Filter.

4.44.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IIR_Filter'.
Removed a total of 0 cells.

4.44.10. Executing OPT_DFF pass (perform DFF optimizations).

4.44.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IIR_Filter..

4.44.12. Finished OPT passes. (There is nothing left to do.)

4.45. Executing TECHMAP pass (map to technology primitives).

4.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.46. Executing ABC pass (technology mapping using ABC).

4.46.1. Extracting gate netlist of module `\IIR_Filter' to `<abc-temp-dir>/input.blif'..
Extracted 183 gates and 258 wires to a netlist network with 74 inputs and 41 outputs.

4.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      69.
ABC: Participating nodes from both networks       =     137.
ABC: Participating nodes from the first network   =      68. (  93.15 % of nodes)
ABC: Participating nodes from the second network  =      69. (  94.52 % of nodes)
ABC: Node pairs (any polarity)                    =      68. (  93.15 % of names can be moved)
ABC: Node pairs (same polarity)                   =      54. (  73.97 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

4.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       72
ABC RESULTS:        internal signals:      143
ABC RESULTS:           input signals:       74
ABC RESULTS:          output signals:       41
Removing temp directory.

4.47. Executing ICE40_WRAPCARRY pass (wrap carries).

4.48. Executing TECHMAP pass (map to technology primitives).

4.48.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 10 unused cells and 155 unused wires.

4.49. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      231
  2-LUT               12
  3-LUT              206
  4-LUT               13

Eliminating LUTs.
Number of LUTs:      231
  2-LUT               12
  3-LUT              206
  4-LUT               13

Combining LUTs.
Number of LUTs:      231
  2-LUT               12
  3-LUT              206
  4-LUT               13

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~483 debug messages>

4.50. Executing TECHMAP pass (map to technology primitives).

4.50.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.50.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~403 debug messages>
Removed 0 unused cells and 476 unused wires.

4.51. Executing AUTONAME pass.
Renamed 6377 objects in module IIR_Filter (16 iterations).
<suppressed ~1151 debug messages>

4.52. Executing HIERARCHY pass (managing design hierarchy).

4.52.1. Analyzing design hierarchy..
Top module:  \IIR_Filter

4.52.2. Analyzing design hierarchy..
Top module:  \IIR_Filter
Removed 0 unused modules.

4.53. Printing statistics.

=== IIR_Filter ===

   Number of wires:                138
   Number of wire bits:           1993
   Number of public wires:         138
   Number of public wire bits:    1993
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1052
     SB_CARRY                      149
     SB_DFF                          1
     SB_DFFE                       112
     SB_DFFNSR                     338
     SB_DFFSR                      208
     SB_LUT4                       231
     SB_MAC16                       13

4.54. Executing CHECK pass (checking for obvious problems).
Checking module IIR_Filter...
Found and reported 0 problems.

4.55. Executing JSON backend.

5. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 8653d44505, CPU: user 1.42s system 0.01s, MEM: 56.54 MB peak
Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)
Time spent: 17% 22x opt_clean (0 sec), 13% 16x read_verilog (0 sec), ...
